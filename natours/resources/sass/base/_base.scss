/* -------------------------- */
/* Colours */
/* -------------------------- */

$color-primary: #55c57e;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;

$color-secondary-light: #ffb900;
$color-secondary-dark: #ff7730;

$color-tertiary-light: #2998ff;
$color-tertiary-dark: #5643fa;

$color-white: #fff;
$color-grey-light-1: #f7f7f7;
$color-grey-dark: #777;
$color-grey-dark-2: #333;
$color-black: #000;

$container-width: 114rem;
$gutter-vertical: 7rem;

/* -------------------------- */
/* Mixins */
/* -------------------------- */

@mixin text-style($size) {
  text-transform: uppercase;
  font-weight: 700;
  font-size: $size;
}

@mixin heading-style {
  background-image: linear-gradient(
    to right,
    $color-primary-light,
    $color-primary-dark
  );
  // We use background-clip to specify where the background should extend to
  // https://developer.mozilla.org/en-US/docs/Web/CSS/background-clip
  background-clip: text;
  -webkit-background-clip: text;
  color: transparent;
}

@mixin background-setting($img) {
  background: linear-gradient(
      to right bottom,
      // In SCSS, we can use a color variable whose value is hexadecimal within rgba
      rgba($color-primary-light, 0.8),
      rgba($color-primary-dark, 0.8)
    ),
    url($img) center/cover;
}

@mixin absCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/* -------------------------- */
/* General Styles */
/* -------------------------- */

/* In order to select not only the original element but also all the elements before and after 
to also apply the default settings to them. Without this extra selectors, the element made by the pseudo element 
will not include the length of paddings and borders in their width and height */
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

::selection {
  background-color: $color-primary;
  color: $color-white;
}

html {
  font-size: 62.5%;
  scroll-behavior: smooth;
}

body {
  font: 400 1.6rem/1.7 "Lato", sans-serif;
  color: $color-grey-dark;
  /* This is to place the white space around the website */
  padding: 3rem;
}

/* Prevent CSS transitions on page load with ES6 */
/* http://joshfrankel.me/blog/prevent-css-transitions-on-page-load-with-es6/ */
.preload-transition {
  transition: none;
}

a {
  text-decoration: none;
  display: inline-block;
}

.btn {
  @include text-style(inherit);
  padding: 1.5rem 4rem;
  border-radius: 50px;
  transition: 0.2s linear;
  cursor: pointer;
  position: relative;

  &--animated {
    animation: slideInBottom 0.8s 0.9s linear both;
  }

  &--text {
    color: $color-primary;
    padding: 1rem;
    border-bottom: 1px solid $color-primary;
    position: relative;
    transition: 0.2s;

    &:hover {
      transform: translateY(-2px);
      box-shadow: 0 1rem 2rem rgba($color-grey-dark, 0.6);
      background-color: $color-primary;
      color: $color-white;
    }

    &:active {
      transform: translateY(0);
      box-shadow: 0 0.5rem 1rem rgba($color-grey-dark, 0.7);
    }
  }

  /* Element created from ::after is basically treated as a child element of it original element */
  &::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 50px;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: 0.3s linear;
  }

  &--white {
    color: $color-grey-dark;
    background-color: $color-white;

    &::after {
      background-color: $color-white;
    }
  }

  &--green {
    color: $color-white;
    background-color: $color-primary;

    &::after {
      background-color: $color-primary;
    }
  }

  &:hover {
    transform: translateY(-4px);
    box-shadow: 0 1rem 2rem rgba($color-grey-dark, 0.6);

    &::after {
      transform: scale(2);
      opacity: 0;
    }
  }

  /* As we decrease the blur of the shadow, it could make users think the box comes closer to the bottom */
  &:active {
    transform: translateY(0);
    box-shadow: 0 0.5rem 1rem rgba($color-grey-dark, 0.7);
  }
}

@keyframes slideInBottom {
  0% {
    transform: translateY(3rem);
    opacity: 0;
  }

  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

section {
  padding: 22rem 0;
}

.container {
  max-width: $container-width;
  margin: auto;

  &:not(:last-child) {
    margin-bottom: $gutter-vertical;
  }

  > div {
    flex: 1;
  }
}

.grid {
  display: flex;
}

.heading-secondary {
  @include text-style(3.5rem);
  @include heading-style;
  text-align: center;
  letter-spacing: 0.2rem;
  margin-bottom: 8rem;
}

.heading-tertiary {
  @include text-style(1.6rem);
  margin-bottom: 1.5rem;
}

.paragraph {
  font-size: 1.4rem;

  &:not(:last-child) {
    margin-bottom: 3rem;
  }
}
